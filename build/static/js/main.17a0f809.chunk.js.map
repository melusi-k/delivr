{"version":3,"sources":["serviceWorker.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/SignOut/index.js","components/Session/context.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","constants/routes.js","components/Navigation/index.js","components/Landing/index.js","components/SignUp/index.js","components/PasswordForget/index.js","components/SignIn/index.js","components/Home/index.js","components/PasswordChange/index.js","components/Account/index.js","components/Admin/index.js","components/App/index.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","FirebaseContext","React","createContext","withFirebase","Component","props","Consumer","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","user","uid","db","ref","users","app","initializeApp","this","database","type","onClick","AuthUserContext","withAuthentication","WithAuthentication","authUser","listener","onAuthStateChanged","setState","Provider","value","withAuthorization","condition","WithAuthorization","history","push","compose","withRouter","NavigationAuth","to","SignOut","NavigationNonAuth","Navigation","App","INITIAL_STATE","username","passwordOne","passwordTwo","SignUpFormBase","onSubmit","event","set","preventDefault","onChange","target","name","isInvalid","placeholder","disabled","message","SignUpLink","SignUpForm","SignUpPage","PasswordForgetFormBase","PasswordForgetLink","PasswordForgetPage","PasswordForgetForm","SignInFormBase","SignInForm","SignInPage","PasswordChangeForm","PasswordChange","AdminPage","loading","on","snapshot","usersObject","val","usersList","Object","keys","map","key","off","UserList","exact","path","component","LandingPage","HomePage","AccountPage","require","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.17a0f809.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\n\r\nconst FirebaseContext = React.createContext(null);\r\n\r\nexport const withFirebase = Component => props => (\r\n  <FirebaseContext.Consumer>\r\n    {firebase => <Component {...props} firebase={firebase} />}\r\n  </FirebaseContext.Consumer>\r\n);\r\n\r\nexport default FirebaseContext;\r\n","import app from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyBiWs1tRRGCofWPFcf1Ry9-_wcWPr0JAnQ\",//process.env.REACT_APP_API_KEY,\r\n  authDomain: \"delivr-25212.firebaseapp.com\",//process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: \"https://delivr-25212.firebaseio.com\",//process.env.REACT_APP_DATABASE_URL,\r\n  projectId: \"delivr-25212\",//process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: \"delivr-25212.appspot.com\",//process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: \"G-TP7KSHC400\",//process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n};\r\n\r\nclass Firebase {\r\n  constructor() {\r\n    app.initializeApp(config);\r\n    this.auth = app.auth();\r\n    this.db = app.database();\r\n  }\r\n\r\n  // *** Auth API ***\r\n\r\n  doCreateUserWithEmailAndPassword = (email, password) =>\r\n    this.auth.createUserWithEmailAndPassword(email, password);\r\n\r\n  doSignInWithEmailAndPassword = (email, password) =>\r\n    this.auth.signInWithEmailAndPassword(email, password);\r\n\r\n  doSignOut = () => this.auth.signOut();\r\n\r\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\r\n\r\n  doPasswordUpdate = password =>\r\n    this.auth.currentUser.updatePassword(password);\r\n\r\n    // *** User API ***\r\n      user = uid => this.db.ref(`users/${uid}`);\r\n      users = () => this.db.ref('users');\r\n\r\n}\r\n\r\nexport default Firebase;\r\n","import FirebaseContext, { withFirebase } from './context';\r\nimport Firebase from './firebase';\r\n\r\nexport default Firebase;\r\n\r\nexport { FirebaseContext, withFirebase };\r\n","import React from 'react';\r\nimport { withFirebase } from '../Firebase';\r\nconst SignOutButton = ({ firebase }) => (\r\n  <button type=\"button\" onClick={firebase.doSignOut}>\r\n    Sign Out\r\n  </button>\r\n);\r\nexport default withFirebase(SignOutButton);\r\n","import React from 'react';\r\n\r\nconst AuthUserContext = React.createContext(null);\r\n\r\nexport default AuthUserContext;\r\n","import React from 'react';\r\n\r\nimport AuthUserContext from './context';\r\nimport { withFirebase } from '../Firebase';\r\n\r\nconst withAuthentication = Component => {\r\n  class WithAuthentication extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n        authUser: null,\r\n      };\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.listener = this.props.firebase.auth.onAuthStateChanged(\r\n        authUser => {\r\n          authUser\r\n            ? this.setState({ authUser })\r\n            : this.setState({ authUser: null });\r\n        },\r\n      );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.listener();\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Provider value={this.state.authUser}>\r\n          <Component {...this.props} />\r\n        </AuthUserContext.Provider>\r\n      );\r\n    }\r\n  }\r\n\r\n  return withFirebase(WithAuthentication);\r\n};\r\n\r\nexport default withAuthentication;\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\nimport AuthUserContext from './context';\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\nconst withAuthorization = condition => Component => {\r\n  class WithAuthorization extends React.Component {\r\n    componentDidMount() {\r\n      this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\r\n        if (!condition(authUser)) {\r\n          this.props.history.push(ROUTES.SIGN_IN);\r\n        }\r\n      });\r\n    }\r\n    componentWillUnmount() {\r\n      this.listener();\r\n    }\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Consumer>\r\n          {authUser =>\r\n            condition(authUser) ? <Component {...this.props} /> : null\r\n          }\r\n        </AuthUserContext.Consumer>\r\n      );\r\n    }\r\n  }\r\n  return compose(\r\n    withRouter,\r\n    withFirebase,\r\n  )(WithAuthorization);\r\n};\r\nexport default withAuthorization;\r\n","export const LANDING = '/';\r\nexport const SIGN_UP = '/signup';\r\nexport const SIGN_IN = '/signin';\r\nexport const HOME = '/home';\r\nexport const ACCOUNT = '/account';\r\nexport const ADMIN = '/admin';\r\nexport const PASSWORD_FORGET = '/pw-forget';\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport SignOutButton from '../SignOut';\r\nimport { AuthUserContext } from '../Session';\r\n\r\n\r\nconst Navigation = ({ authUser }) => (\r\n  <div>\r\n  <AuthUserContext.Consumer>\r\n      {\r\n        authUser =>\r\n        authUser ? <NavigationAuth /> : <NavigationNonAuth />\r\n      }\r\n    </AuthUserContext.Consumer>\r\n  </div>\r\n);\r\n\r\nconst NavigationAuth = () => (\r\n  <ul>\r\n    <li>\r\n      <Link to={ROUTES.LANDING}>Landing</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={ROUTES.HOME}>Home</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={ROUTES.ACCOUNT}>Account</Link>\r\n    </li>\r\n    <li>\r\n     <Link to={ROUTES.ADMIN}>Admin</Link>\r\n   </li>\r\n    <li>\r\n      <SignOutButton />\r\n    </li>\r\n  </ul>\r\n);\r\nconst NavigationNonAuth = () => (\r\n  <ul>\r\n    <li>\r\n      <Link to={ROUTES.LANDING}>Landing</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={ROUTES.SIGN_IN}>Sign In</Link>\r\n    </li>\r\n  </ul>\r\n);\r\nexport default Navigation;\r\n","import React from 'react';\r\nconst App = () => (\r\n  <div>\r\n    <h1>Delivr</h1>\r\n  </div>\r\n);\r\nexport default App;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst INITIAL_STATE = {\r\n  username: '',\r\n  email: '',\r\n  passwordOne: '',\r\n  passwordTwo: '',\r\n  error: null,\r\n};\r\n\r\nconst SignUpPage = () => (\r\n  <div>\r\n    <h1>Sign Up</h1>\r\n    <SignUpForm />\r\n  </div>\r\n);\r\n\r\nclass SignUpFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...INITIAL_STATE };\r\n  };\r\n\r\n  onSubmit = event => {\r\n    const { username, email, passwordOne } = this.state;\r\n    this.props.firebase\r\n  .doCreateUserWithEmailAndPassword(email, passwordOne)\r\n  .then(authUser => {\r\n    // Create a user in your Firebase realtime database\r\n    return this.props.firebase\r\n      .user(authUser.user.uid)\r\n      .set({\r\n        username,\r\n        email,\r\n      });\r\n  })\r\n  .then(() => {\r\n    this.setState({ ...INITIAL_STATE });\r\n    this.props.history.push(ROUTES.HOME);\r\n  })\r\n  .catch(error => {\r\n    this.setState({ error });\r\n  });\r\nevent.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render()\r\n  {\r\n    const {\r\n      username,\r\n      email,\r\n      passwordOne,\r\n      passwordTwo,\r\n      error,\r\n    } = this.state;\r\n\r\n    const isInvalid =\r\n      passwordOne !== passwordTwo ||\r\n      passwordOne === '' ||\r\n      email === '' ||\r\n      username === '';\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n      <input\r\n          name=\"username\"\r\n          value={username}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Full Name\"\r\n        />\r\n        <input\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email Address\"\r\n        />\r\n        <input\r\n          name=\"passwordOne\"\r\n          value={passwordOne}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n        />\r\n        <input\r\n          name=\"passwordTwo\"\r\n          value={passwordTwo}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Confirm Password\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Sign Up\r\n        </button>\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  };\r\n}\r\n\r\nconst SignUpLink = () => (\r\n  <p>\r\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\r\n  </p>\r\n);\r\n\r\nconst SignUpForm = compose(\r\n  withRouter,\r\n  withFirebase,\r\n)(SignUpFormBase);\r\n\r\nexport default SignUpPage;\r\nexport { SignUpForm, SignUpLink };\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\nconst PasswordForgetPage = () => (\r\n  <div>\r\n    <h1>PasswordForget</h1>\r\n    <PasswordForgetForm />\r\n  </div>\r\n);\r\nconst INITIAL_STATE = {\r\n  email: '',\r\n  error: null,\r\n};\r\nclass PasswordForgetFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n  onSubmit = event => {\r\n    const { email } = this.state;\r\n    this.props.firebase\r\n      .doPasswordReset(email)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n    event.preventDefault();\r\n  };\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n  render() {\r\n    const { email, error } = this.state;\r\n    const isInvalid = email === '';\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"email\"\r\n          value={this.state.email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email Address\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Reset My Password\r\n        </button>\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\nconst PasswordForgetLink = () => (\r\n  <p>\r\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\r\n  </p>\r\n);\r\nexport default PasswordForgetPage;\r\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\r\nexport { PasswordForgetForm, PasswordForgetLink };\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\nimport { SignUpLink } from '../SignUp';\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { PasswordForgetLink } from '../PasswordForget';\r\n\r\nconst SignInPage = () => (\r\n  <div>\r\n    <h1>SignIn</h1>\r\n    <SignInForm />\r\n    <PasswordForgetLink />\r\n    <SignUpLink />\r\n  </div>\r\n);\r\nconst INITIAL_STATE = {\r\n  email: '',\r\n  password: '',\r\n  error: null,\r\n};\r\n\r\nclass SignInFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = event => {\r\n      const { email, password } = this.state;\r\n      this.props.firebase\r\n        .doSignInWithEmailAndPassword(email, password)\r\n        .then(() => {\r\n          this.setState({ ...INITIAL_STATE });\r\n          this.props.history.push(ROUTES.HOME);\r\n        })\r\n        .catch(error => {\r\n          this.setState({ error });\r\n        });\r\n      event.preventDefault();\r\n    };\r\n    onChange = event => {\r\n      this.setState({ [event.target.name]: event.target.value });\r\n    };\r\n\r\n    render() {\r\n        const { email, password, error } = this.state;\r\n        const isInvalid = password === '' || email === '';\r\n        return (\r\n          <form onSubmit={this.onSubmit}>\r\n            <input\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={this.onChange}\r\n              type=\"text\"\r\n              placeholder=\"Email Address\"\r\n            />\r\n            <input\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={this.onChange}\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n            />\r\n            <button disabled={isInvalid} type=\"submit\">\r\n              Sign In\r\n            </button>\r\n            {error && <p>{error.message}</p>}\r\n          </form>\r\n        );\r\n      }\r\n    }\r\n\r\n    const SignInForm = compose(\r\n      withRouter,\r\n      withFirebase,\r\n    )(SignInFormBase);\r\n    export default SignInPage;\r\n    export { SignInForm };\r\n","import React from 'react';\r\nimport { withAuthorization } from '../Session';\r\nconst HomePage = () => (\r\n  <div>\r\n    <h1>Home Page</h1>\r\n    <p>The Home Page is accessible by every signed in user.</p>\r\n  </div>\r\n);\r\nconst condition = authUser => !!authUser;\r\nexport default withAuthorization(condition)(HomePage);\r\n","import React, { Component } from 'react';\r\nimport { withFirebase } from '../Firebase';\r\nconst INITIAL_STATE = {\r\n  passwordOne: '',\r\n  passwordTwo: '',\r\n  error: null,\r\n};\r\nclass PasswordChangeForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n  onSubmit = event => {\r\n    const { passwordOne } = this.state;\r\n    this.props.firebase\r\n      .doPasswordUpdate(passwordOne)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n    event.preventDefault();\r\n  };\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n  render() {\r\n    const { passwordOne, passwordTwo, error } = this.state;\r\n    const isInvalid =\r\n      passwordOne !== passwordTwo || passwordOne === '';\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"passwordOne\"\r\n          value={passwordOne}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"New Password\"\r\n        />\r\n        <input\r\n          name=\"passwordTwo\"\r\n          value={passwordTwo}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Confirm New Password\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Reset My Password\r\n        </button>\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\nexport default withFirebase(PasswordChangeForm);\r\n","import React from 'react';\r\nimport { AuthUserContext, withAuthorization } from '../Session';\r\nimport { PasswordForgetForm } from '../PasswordForget';\r\nimport PasswordChangeForm from '../PasswordChange';\r\nconst AccountPage = () => (\r\n  <AuthUserContext.Consumer>\r\n    {authUser => (\r\n      <div>\r\n        <h1>Account: {authUser.email}</h1>\r\n        <PasswordForgetForm />\r\n        <PasswordChangeForm />\r\n      </div>\r\n    )}\r\n  </AuthUserContext.Consumer>\r\n);\r\nconst condition = authUser => !!authUser;\r\nexport default withAuthorization(condition)(AccountPage);\r\n","import React, { Component } from 'react';\r\nimport { withFirebase } from '../Firebase';\r\n\r\nclass AdminPage extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      users: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n    this.props.firebase.users().on('value', snapshot => {\r\n      const usersObject = snapshot.val();\r\n      const usersList = Object.keys(usersObject).map(key => ({\r\n        ...usersObject[key],\r\n        uid: key,\r\n      }));\r\n      this.setState({\r\n        users: usersList,\r\n        loading: false,\r\n      });\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n      this.props.firebase.users().off();\r\n    }\r\n\r\n    render() {\r\n      const { users, loading } = this.state;\r\n      return (\r\n        <div>\r\n          <h1>Admin</h1>\r\n          {loading && <div>Loading ...</div>}\r\n          <UserList users={users} />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  const UserList = ({ users }) => (\r\n    <ul>\r\n      {users.map(user => (\r\n        <li key={user.uid}>\r\n          <span>\r\n            <strong>ID:</strong> {user.uid}\r\n          </span>\r\n          <span>\r\n            <strong>E-Mail:</strong> {user.email}\r\n          </span>\r\n          <span>\r\n            <strong>Username:</strong> {user.username}\r\n          </span>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n\r\n\r\n\r\nexport default withFirebase(AdminPage);\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\n\r\nimport Navigation from '../Navigation';\r\nimport LandingPage from '../Landing';\r\nimport SignUpPage from '../SignUp';\r\nimport SignInPage from '../SignIn';\r\nimport PasswordForgetPage from '../PasswordForget';\r\nimport HomePage from '../Home';\r\nimport AccountPage from '../Account';\r\nimport AdminPage from '../Admin';\r\n\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { withAuthentication } from '../Session';\r\n\r\nconst App = () => (\r\n  <Router>\r\n    <div>\r\n      <Navigation />\r\n\r\n      <hr />\r\n\r\n      <Route exact path={ROUTES.LANDING} component={LandingPage} />\r\n      <Route exact path={ROUTES.SIGN_UP} component={SignUpPage} />\r\n      <Route exact path={ROUTES.SIGN_IN} component={SignInPage} />\r\n      <Route\r\n        exact\r\n        path={ROUTES.PASSWORD_FORGET}\r\n        component={PasswordForgetPage}\r\n      />\r\n      <Route exact path={ROUTES.HOME} component={HomePage} />\r\n      <Route exact path={ROUTES.ACCOUNT} component={AccountPage} />\r\n      <Route exact path={ROUTES.ADMIN} component={AdminPage} />\r\n    </div>\r\n  </Router>\r\n);\r\n\r\nexport default withAuthentication(App);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './components/App';\nimport Firebase, { FirebaseContext } from './components/Firebase';\nrequire('dotenv').config();\n\nReactDOM.render(\n  <FirebaseContext.Provider value={new Firebase()}>\n    <App />\n  </FirebaseContext.Provider>,\n  document.getElementById('root'),\n);\nserviceWorker.register();\n"],"sourceRoot":""}